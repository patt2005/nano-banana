// Generated by Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.19.9 clang-1700.3.19.1)
#ifndef MATHJAXSWIFT_SWIFT_H
#define MATHJAXSWIFT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MathJaxSwift",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class NSString;
SWIFT_CLASS("_TtC12MathJaxSwift11A11YOptions")
@interface A11YOptions : NSObject
@property (nonatomic) BOOL speech;
@property (nonatomic) BOOL braille;
@property (nonatomic) BOOL subtitles;
@property (nonatomic) BOOL viewBraille;
@property (nonatomic, copy) NSString * _Nonnull backgroundColor;
@property (nonatomic) double backgroundOpacity;
@property (nonatomic, copy) NSString * _Nonnull foregroundColor;
@property (nonatomic) double foregroundOpacity;
@property (nonatomic, copy) NSString * _Nonnull highlight;
@property (nonatomic) BOOL flame;
@property (nonatomic) BOOL hover;
@property (nonatomic) BOOL treeColoring;
@property (nonatomic, copy) NSString * _Nonnull magnification;
@property (nonatomic, copy) NSString * _Nonnull magnify;
@property (nonatomic) BOOL keyMagnifier;
@property (nonatomic) BOOL mouseMagnifier;
@property (nonatomic, copy) NSString * _Nonnull align;
@property (nonatomic) BOOL infoType;
@property (nonatomic) BOOL infoRole;
@property (nonatomic) BOOL infoPrefix;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift21InputProcessorOptions")
@interface InputProcessorOptions : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC12MathJaxSwift23AMInputProcessorOptions")
@interface AMInputProcessorOptions : InputProcessorOptions
@property (nonatomic) BOOL fixphi;
@property (nonatomic) BOOL displaystyle;
@property (nonatomic, copy) NSString * _Nonnull decimalsign;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift12AMSCDOptions")
@interface AMSCDOptions : NSObject
@property (nonatomic, copy) NSString * _Nonnull colspace;
@property (nonatomic, copy) NSString * _Nonnull rowspace;
@property (nonatomic, copy) NSString * _Nonnull harrowsize;
@property (nonatomic, copy) NSString * _Nonnull varrowsize;
@property (nonatomic) BOOL hideHorizontalLabels;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift10AMSOptions")
@interface AMSOptions : NSObject
@property (nonatomic, copy) NSString * _Nonnull multilineWidth;
@property (nonatomic, copy) NSString * _Nonnull multilineIndent;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift12AllowOptions")
@interface AllowOptions : NSObject
@property (nonatomic, copy) NSString * _Nonnull URLs;
@property (nonatomic, copy) NSString * _Nonnull classes;
@property (nonatomic, copy) NSString * _Nonnull cssIDs;
@property (nonatomic, copy) NSString * _Nonnull styles;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift15AutoloadOptions")
@interface AutoloadOptions : NSObject
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull action;
@property (nonatomic, copy) NSArray<NSArray<NSString *> *> * _Nonnull amscd;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull bbox;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull boldsymbol;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull braket;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull cancel;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull color;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull enclose;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull extpfeil;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull html;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull mhchem;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull newcommand;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull unicode;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull verb;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift22OutputProcessorOptions")
@interface OutputProcessorOptions : NSObject
@property (nonatomic) double scale;
@property (nonatomic) double minScale;
@property (nonatomic) BOOL mtextInheritFont;
@property (nonatomic) BOOL merrorInheritFont;
@property (nonatomic, copy) NSString * _Nonnull mtextFont;
@property (nonatomic, copy) NSString * _Nonnull merrorFont;
@property (nonatomic, copy) NSString * _Nonnull unknownFamily;
@property (nonatomic) BOOL mathmlSpacing;
@property (nonatomic, copy) NSDictionary<NSString *, NSNumber *> * _Nonnull skipAttributes;
@property (nonatomic) double exFactor;
@property (nonatomic, copy) NSString * _Nonnull displayAlign;
@property (nonatomic) double displayIndent;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURL;
SWIFT_CLASS("_TtC12MathJaxSwift27CHTMLOutputProcessorOptions")
@interface CHTMLOutputProcessorOptions : OutputProcessorOptions
@property (nonatomic) BOOL matchFontHeight;
@property (nonatomic, copy) NSURL * _Nonnull fontURL;
@property (nonatomic) BOOL adaptiveCSS;
@end

SWIFT_CLASS("_TtC12MathJaxSwift12ColorOptions")
@interface ColorOptions : NSObject
@property (nonatomic, copy) NSString * _Nonnull padding;
@property (nonatomic, copy) NSString * _Nonnull borderWidth;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift17ConversionOptions")
@interface ConversionOptions : NSObject
@property (nonatomic) BOOL display;
@property (nonatomic) double em;
@property (nonatomic) double ex;
@property (nonatomic) double containerWidth;
@property (nonatomic) double lineWidth;
@property (nonatomic) double scale;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SREOptions;
@class MenuOptions;
@class SafeOptions;
@class JSValue;
SWIFT_CLASS("_TtC12MathJaxSwift15DocumentOptions")
@interface DocumentOptions : NSObject
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull skipHtmlTags;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull includeHtmlTags;
@property (nonatomic, copy) NSString * _Nonnull ignoreHtmlClass;
@property (nonatomic, copy) NSString * _Nonnull processHtmlClass;
@property (nonatomic) BOOL enableEnrichment;
@property (nonatomic) BOOL enableComplexity;
@property (nonatomic) BOOL makeCollapsible;
@property (nonatomic) BOOL identifyCollapsible;
@property (nonatomic) BOOL enableExplorer;
@property (nonatomic) BOOL enableAssistiveMml;
@property (nonatomic) BOOL enableMenu;
@property (nonatomic, copy) NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull annotationTypes;
@property (nonatomic, strong) A11YOptions * _Nonnull a11y;
@property (nonatomic, strong) SREOptions * _Nonnull sre;
@property (nonatomic, strong) MenuOptions * _Nonnull menuOptions;
@property (nonatomic, strong) SafeOptions * _Nonnull safeOptions;
@property (nonatomic, copy) void (^ _Nullable enrichError)(JSValue * _Nullable, JSValue * _Nullable, JSValue * _Nullable);
@property (nonatomic, copy) void (^ _Nullable compileError)(JSValue * _Nullable, JSValue * _Nullable, JSValue * _Nullable);
@property (nonatomic, copy) void (^ _Nullable typesetError)(JSValue * _Nullable, JSValue * _Nullable, JSValue * _Nullable);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class Verify;
SWIFT_CLASS("_TtC12MathJaxSwift24MMLInputProcessorOptions")
@interface MMLInputProcessorOptions : InputProcessorOptions
@property (nonatomic, copy) NSString * _Nonnull parseAs;
@property (nonatomic) BOOL forceReparse;
@property (nonatomic, copy) void (^ _Nullable parseError)(JSValue * _Nullable);
@property (nonatomic, strong) Verify * _Nonnull verify;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtCC12MathJaxSwift24MMLInputProcessorOptions6Verify")
@interface Verify : NSObject
@property (nonatomic) BOOL checkArity;
@property (nonatomic) BOOL checkAttributes;
@property (nonatomic) BOOL fullErrors;
@property (nonatomic) BOOL fixMmultiscripts;
@property (nonatomic) BOOL fixMtables;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift16MathtoolsOptions")
@interface MathtoolsOptions : NSObject
@property (nonatomic, copy) NSString * _Nonnull multlinegap;
@property (nonatomic, copy) NSString * _Nonnull multlinedPos;
@property (nonatomic, copy) NSString * _Nonnull firstlineAfterskip;
@property (nonatomic, copy) NSString * _Nonnull lastlinePreskip;
@property (nonatomic, copy) NSString * _Nonnull smallmatrixAlign;
@property (nonatomic, copy) NSString * _Nonnull shortvdotsadjustabove;
@property (nonatomic, copy) NSString * _Nonnull shortvdotsadjustbelow;
@property (nonatomic) BOOL centercolon;
@property (nonatomic, copy) NSString * _Nonnull centercolonOffset;
@property (nonatomic, copy) NSString * _Nonnull thincolonDx;
@property (nonatomic, copy) NSString * _Nonnull thincolonDw;
@property (nonatomic) BOOL useUnicode;
@property (nonatomic, copy) NSString * _Nonnull prescriptSubFormat;
@property (nonatomic, copy) NSString * _Nonnull prescriptSupFormat;
@property (nonatomic, copy) NSString * _Nonnull prescriptArgFormat;
@property (nonatomic) BOOL allowMathtoolsset;
@property (nonatomic, copy) NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull pairedDelimiters;
@property (nonatomic, copy) NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull tagforms;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MenuOptionsSettings;
SWIFT_CLASS("_TtC12MathJaxSwift11MenuOptions")
@interface MenuOptions : NSObject
@property (nonatomic, strong) MenuOptionsSettings * _Nonnull settings;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift19MenuOptionsSettings")
@interface MenuOptionsSettings : NSObject
@property (nonatomic) BOOL texHints;
@property (nonatomic) BOOL semantics;
@property (nonatomic, copy) NSString * _Nonnull zoom;
@property (nonatomic, copy) NSString * _Nonnull zscale;
@property (nonatomic, copy) NSString * _Nonnull renderer;
@property (nonatomic) BOOL alt;
@property (nonatomic) BOOL cmd;
@property (nonatomic) BOOL ctrl;
@property (nonatomic) BOOL shift;
@property (nonatomic) double scale;
@property (nonatomic) BOOL inTabOrder;
@property (nonatomic) BOOL assistiveMml;
@property (nonatomic) BOOL collapsible;
@property (nonatomic) BOOL explorer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift18NoundefinedOptions")
@interface NoundefinedOptions : NSObject
@property (nonatomic, copy) NSString * _Nonnull color;
@property (nonatomic, copy) NSString * _Nonnull background;
@property (nonatomic, copy) NSString * _Nonnull size;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift14PhysicsOptions")
@interface PhysicsOptions : NSObject
@property (nonatomic) BOOL italicdiff;
@property (nonatomic) BOOL arrowdel;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift14RequireOptions")
@interface RequireOptions : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, NSNumber *> * _Nonnull allow;
@property (nonatomic) BOOL defaultAllow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift10SREOptions")
@interface SREOptions : NSObject
@property (nonatomic, copy) NSString * _Nonnull domain;
@property (nonatomic, copy) NSString * _Nonnull style;
@property (nonatomic, copy) NSString * _Nonnull locale;
@property (nonatomic, copy) NSString * _Nonnull subiso;
@property (nonatomic, copy) NSString * _Nonnull markup;
@property (nonatomic, copy) NSString * _Nonnull modality;
@property (nonatomic, copy) NSString * _Nonnull speech;
@property (nonatomic) BOOL pprint;
@property (nonatomic, copy) NSString * _Nullable structure;
@property (nonatomic, copy) NSURL * _Nullable json;
@property (nonatomic, copy) NSURL * _Nullable xpath;
@property (nonatomic) double rate;
@property (nonatomic) BOOL strict;
@property (nonatomic, copy) NSString * _Nonnull mode;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift25SVGOutputProcessorOptions")
@interface SVGOutputProcessorOptions : OutputProcessorOptions
@property (nonatomic, copy) NSString * _Nonnull fontCache;
@property (nonatomic) BOOL internalSpeechTitles;
@property (nonatomic, copy) NSString * _Nullable localID;
@property (nonatomic) NSInteger titleID;
@end

@class SafeProtocols;
@class SafeStyles;
SWIFT_CLASS("_TtC12MathJaxSwift11SafeOptions")
@interface SafeOptions : NSObject
@property (nonatomic) NSInteger lengthMax;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull scriptsizemultiplierRange;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull scriptlevelRange;
@property (nonatomic, copy) NSString * _Nonnull classPattern;
@property (nonatomic, copy) NSString * _Nonnull idPattern;
@property (nonatomic, copy) NSString * _Nonnull dataPattern;
@property (nonatomic, strong) AllowOptions * _Nonnull allowOptions;
@property (nonatomic, strong) SafeProtocols * _Nonnull safeProtocols;
@property (nonatomic, strong) SafeStyles * _Nonnull safeStyles;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift13SafeProtocols")
@interface SafeProtocols : NSObject
@property (nonatomic) BOOL http;
@property (nonatomic) BOOL https;
@property (nonatomic) BOOL file;
@property (nonatomic) BOOL javascript;
@property (nonatomic) BOOL data;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift10SafeStyles")
@interface SafeStyles : NSObject
@property (nonatomic) BOOL color;
@property (nonatomic) BOOL backgroundColor;
@property (nonatomic) BOOL border;
@property (nonatomic) BOOL cursor;
@property (nonatomic) BOOL margin;
@property (nonatomic) BOOL padding;
@property (nonatomic) BOOL textShadow;
@property (nonatomic) BOOL fontFamily;
@property (nonatomic) BOOL fontSize;
@property (nonatomic) BOOL fontStyle;
@property (nonatomic) BOOL fontWeight;
@property (nonatomic) BOOL opacity;
@property (nonatomic) BOOL outline;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift10SetOptions")
@interface SetOptions : NSObject
@property (nonatomic, copy) BOOL (^ _Nullable filterPackage)(JSValue * _Nullable, NSString * _Nonnull);
@property (nonatomic, copy) BOOL (^ _Nullable filterOption)(JSValue * _Nullable, NSString * _Nonnull, NSString * _Nonnull);
@property (nonatomic, copy) BOOL (^ _Nullable filterValue)(JSValue * _Nullable, NSString * _Nonnull, NSString * _Nonnull, JSValue * _Nullable);
@property (nonatomic) BOOL allowPackageDefault;
@property (nonatomic) BOOL allowOptionsDefault;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift16TagFormatOptions")
@interface TagFormatOptions : NSObject
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable number)(NSInteger);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable tag)(NSInteger);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable id)(NSInteger);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable url)(NSInteger, NSString * _Nonnull);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12MathJaxSwift24TeXInputProcessorOptions")
@interface TeXInputProcessorOptions : InputProcessorOptions
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull loadPackages;
@property (nonatomic, copy) NSArray<NSArray<NSString *> *> * _Nonnull inlineMath;
@property (nonatomic, copy) NSArray<NSArray<NSString *> *> * _Nonnull displayMath;
@property (nonatomic) BOOL processEscapes;
@property (nonatomic) BOOL processRefs;
@property (nonatomic) BOOL processEnvironments;
@property (nonatomic, copy) NSString * _Nonnull digits;
@property (nonatomic, copy) NSString * _Nonnull tags;
@property (nonatomic, copy) NSString * _Nonnull tagSide;
@property (nonatomic, copy) NSString * _Nonnull tagIndent;
@property (nonatomic) BOOL useLabelIds;
@property (nonatomic) NSInteger maxMacros;
@property (nonatomic) NSInteger maxBuffer;
@property (nonatomic, copy) NSString * _Nullable baseURL;
@property (nonatomic, copy) void (^ _Nullable formatError)(JSValue * _Nullable, JSValue * _Nullable);
@property (nonatomic, strong) AMSOptions * _Nonnull ams;
@property (nonatomic, strong) AMSCDOptions * _Nonnull amscd;
@property (nonatomic, strong) AutoloadOptions * _Nonnull autoload;
@property (nonatomic, strong) ColorOptions * _Nonnull color;
@property (nonatomic, strong) MathtoolsOptions * _Nonnull mathtools;
@property (nonatomic, strong) NoundefinedOptions * _Nonnull noundefined;
@property (nonatomic, strong) PhysicsOptions * _Nonnull physics;
@property (nonatomic, strong) RequireOptions * _Nonnull require;
@property (nonatomic, strong) SetOptions * _Nonnull setoptions;
@property (nonatomic, strong) TagFormatOptions * _Nonnull tagformat;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif
